{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-d4090102704329fe.js","node_modules/@emailjs/browser/es/store/store.js","node_modules/@emailjs/browser/es/utils/validateParams.js","node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","node_modules/@emailjs/browser/es/api/sendPost.js","node_modules/@emailjs/browser/es/index.js","node_modules/@emailjs/browser/es/methods/init/init.js","node_modules/@emailjs/browser/es/methods/send/send.js","node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","node_modules/@parcel/runtime-js/lib/runtime-44e7bd74d9a8b620.js","src/js/index.ts"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"eeBxV\\\":\\\"index.e78572b7.js\\\",\\\"8OQ7p\\\":\\\"icons.db6269d1.svg\\\"}\"));","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} publicKey - set the EmailJS public key\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (publicKey, origin = 'https://api.emailjs.com') => {\n    store._userID = publicKey;\n    store._origin = origin;\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, publicKey) => {\n    const uID = publicKey || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.7.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.7.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"8OQ7p\")).toString();","import emailjs from '@emailjs/browser';\r\nimport icons from '../images/icons.svg';\r\n\r\nconst headerEl = document.querySelector('.header') as HTMLElement;\r\nconst navbarEl = document.querySelector('.navbar') as HTMLElement;\r\nconst navBtnBoxEl = document.getElementById(\r\n  'navbar__btn-box--js'\r\n) as HTMLDivElement;\r\nconst navUseEl = document.getElementById('navbar-icon--js') as HTMLElement;\r\nconst homeEl = document.querySelector('.section--home') as HTMLElement;\r\nconst arrowDownEl = document.getElementById(\r\n  'icon-arrow-down--js'\r\n) as HTMLElement & SVGElement;\r\nconst overlayEl = document.querySelector('.overlay') as HTMLElement;\r\n\r\nsetTimeout(() => {\r\n  const cn = arrowDownEl.classList[0];\r\n  arrowDownEl.classList.add(`${cn}--visible`);\r\n}, 1800);\r\n\r\nlet navClosed = true;\r\n\r\nfunction updateNav(action = 'toggle') {\r\n  if (action === 'toggle') {\r\n    navUseEl.setAttribute(\r\n      'href',\r\n      `${icons}#icon-${navClosed ? 'x' : 'three-lines'}`\r\n    );\r\n\r\n    overlayEl.classList.toggle('overlay--hidden');\r\n    headerEl.classList.toggle('header--max');\r\n    navClosed = !navClosed;\r\n    return;\r\n  }\r\n\r\n  if (navClosed) return;\r\n\r\n  navUseEl.setAttribute('href', `${icons}#icon-three-lines`);\r\n  headerEl.classList.remove('header--max');\r\n  overlayEl.classList.add('overlay--hidden');\r\n  navClosed = true;\r\n}\r\n\r\nfunction scrollToX(x: number) {\r\n  window.scrollTo({ top: x });\r\n}\r\n\r\nnavbarEl.addEventListener('click', function (e) {\r\n  if (!(e.target instanceof Element)) return;\r\n\r\n  const buttonEl = e.target.closest('#navbar__btn--js');\r\n\r\n  if (buttonEl) return updateNav();\r\n\r\n  const link = e.target.getAttribute('href');\r\n\r\n  if (!link) return;\r\n\r\n  updateNav('close');\r\n\r\n  const linkEl = document.getElementById(link.slice(1));\r\n\r\n  if (linkEl) {\r\n    scrollToX(linkEl.offsetTop - navBtnBoxEl.getBoundingClientRect().height);\r\n  }\r\n});\r\n\r\narrowDownEl.addEventListener('click', function () {\r\n  scrollToX(\r\n    homeEl.getBoundingClientRect().height -\r\n      headerEl.getBoundingClientRect().height\r\n  );\r\n});\r\n\r\noverlayEl.addEventListener('click', function () {\r\n  overlayEl.classList.add('overlay--hidden');\r\n  updateNav('close');\r\n});\r\n\r\n// FORM LOGIC /////////////////////\r\n\r\nconst formEl = document.getElementById('contact-form--js') as HTMLFormElement;\r\nconst nameEl = document.getElementById('name') as HTMLInputElement;\r\nconst emailEl = document.getElementById('email') as HTMLInputElement;\r\nconst messageEl = document.getElementById('message') as HTMLInputElement;\r\nconst formBtnEl = document.getElementById('form-btn--js') as HTMLButtonElement;\r\nconst formInputs = [nameEl, emailEl, messageEl];\r\n\r\nemailjs.init('gSeSiP9lCnYcT1OoD');\r\n\r\ntype FormChecks = {\r\n  [validator: string]: (input: string) => string | false | undefined;\r\n};\r\n\r\nconst formChecks: FormChecks = {\r\n  validateLength: val => (val === '' ? \"Field can't be empty.\" : false),\r\n  user_name: val => {\r\n    const isValid = /^[a-z]+(\\s{1}[a-z]+)*$/i.test(val);\r\n    if (!isValid) return 'Not a valid name.';\r\n  },\r\n  user_email: val => {\r\n    const isValid = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(val);\r\n    if (!isValid) return 'Please enter a valid email address.';\r\n  },\r\n  message: val => {\r\n    return val.length < 20 && 'Minimum length: 20 characters.';\r\n  },\r\n};\r\n\r\nconst setInputErrorMessage = (inputName: string, errMsg: string) => {\r\n  const errorEl = document.getElementById(`err-${inputName}--js`);\r\n  if (errorEl) {\r\n    errorEl.innerText = errMsg;\r\n  }\r\n};\r\n\r\nlet feedbackTimerId: null | number = null;\r\n\r\nconst setFormMessage = (text: string, clearTime?: number) => {\r\n  const formFeedback = document.getElementById('form-feedback--js');\r\n\r\n  if (!formFeedback) return;\r\n\r\n  formFeedback.innerText = text;\r\n\r\n  if (!clearTime) return;\r\n\r\n  if (feedbackTimerId) clearTimeout(feedbackTimerId);\r\n\r\n  feedbackTimerId = setTimeout(() => {\r\n    formFeedback.innerText = '';\r\n  }, clearTime * 1000);\r\n};\r\n\r\nconst clearFormValues = () => {\r\n  formInputs.forEach(el => {\r\n    el.value = '';\r\n  });\r\n};\r\n\r\nlet failedAttempts = 0;\r\n\r\nformEl.addEventListener('submit', async function (e) {\r\n  e.preventDefault();\r\n  formBtnEl.setAttribute('disabled', 'true');\r\n\r\n  let formError = false;\r\n\r\n  formInputs.forEach(el => {\r\n    const input = el.value.trim();\r\n\r\n    const lengthError = formChecks.validateLength(input);\r\n\r\n    if (lengthError) {\r\n      formError = true;\r\n      setInputErrorMessage(el.name, lengthError);\r\n      return;\r\n    }\r\n\r\n    const validationError = formChecks[el.name](el.value);\r\n\r\n    if (validationError) {\r\n      formError = true;\r\n      setInputErrorMessage(el.name, validationError);\r\n      return;\r\n    }\r\n\r\n    setInputErrorMessage(el.name, '');\r\n  });\r\n\r\n  if (formError) {\r\n    setFormMessage('There was an issue with 1 or more fields.');\r\n    formBtnEl.removeAttribute('disabled');\r\n    return;\r\n  }\r\n\r\n  formBtnEl.innerText = 'Sending...';\r\n  setFormMessage('');\r\n\r\n  this.contact_number.value = (Math.random() * 100000) | 0;\r\n\r\n  try {\r\n    await emailjs.sendForm('contact_service', 'contact_form', this);\r\n\r\n    setFormMessage('Sent!', 10);\r\n    clearFormValues();\r\n    failedAttempts = 0;\r\n  } catch (err) {\r\n    setFormMessage('An error occurred. Please try again later.', 12);\r\n    failedAttempts++;\r\n\r\n    if (failedAttempts >= 2) {\r\n      clearFormValues();\r\n      failedAttempts = 0;\r\n    }\r\n  } finally {\r\n    formBtnEl.innerText = 'Submit';\r\n    formBtnEl.removeAttribute('disabled');\r\n  }\r\n});\r\n"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$93cf1a4b6b66b547$export$6f57813fe9f31bf9","_origin","$c38317990ba13e64$export$1f3bf48e9edf7d72","publicKey","serviceID","templateID","$8b87799a5b26f4a8$export$29b488039e3d4c2d","constructor","httpResponse","this","status","text","responseText","$109654b55cb4906a$export$4a68059d3a005c64","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","target","responseStatus","open","forEach","key","setRequestHeader","send","$c8d57aa90e55e342$export$2e2bcd8739ae039","origin","_userID","templatePrams","uID","params","lib_version","user_id","service_id","template_id","template_params","stringify","form","currentForm","document","querySelector","nodeName","$3823b7bd999aa23b$var$findHTMLForm","formData","FormData","append","$e27edc6dc33d0133$exports","URL","import","meta","toString","$2c792daab4dd69d2$var$headerEl","$2c792daab4dd69d2$var$navbarEl","$2c792daab4dd69d2$var$navBtnBoxEl","getElementById","$2c792daab4dd69d2$var$navUseEl","$2c792daab4dd69d2$var$homeEl","$2c792daab4dd69d2$var$arrowDownEl","$2c792daab4dd69d2$var$overlayEl","setTimeout","cn","classList","add","$2c792daab4dd69d2$var$navClosed","$2c792daab4dd69d2$var$updateNav","action","setAttribute","$parcel$interopDefault","toggle","remove","$2c792daab4dd69d2$var$scrollToX","x","window","scrollTo","top","e","Element","closest","link","getAttribute","linkEl","slice","offsetTop","getBoundingClientRect","height","$2c792daab4dd69d2$var$formEl","$2c792daab4dd69d2$var$nameEl","$2c792daab4dd69d2$var$emailEl","$2c792daab4dd69d2$var$messageEl","$2c792daab4dd69d2$var$formBtnEl","$2c792daab4dd69d2$var$formInputs","init","$2c792daab4dd69d2$var$formChecks","validateLength","val","user_name","test","user_email","message","$2c792daab4dd69d2$var$setInputErrorMessage","inputName","errMsg","errorEl","innerText","$2c792daab4dd69d2$var$feedbackTimerId","$2c792daab4dd69d2$var$setFormMessage","clearTime","formFeedback","clearTimeout","$2c792daab4dd69d2$var$clearFormValues","el","value","$2c792daab4dd69d2$var$failedAttempts","async","preventDefault","formError","input","trim","lengthError","name","validationError","removeAttribute","contact_number","Math","random","sendForm","err"],"version":3,"file":"index.e78572b7.js.map"}